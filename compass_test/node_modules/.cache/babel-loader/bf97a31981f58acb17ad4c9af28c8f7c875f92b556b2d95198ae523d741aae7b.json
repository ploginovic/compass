{"ast":null,"code":"var _jsxFileName = \"/Users/pavel/Developer/compass_med/compass/compass_test/src/Question.js\";\nimport React from 'react';\nimport './css/QuestionStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Question({\n  data,\n  isLastQuestion,\n  handleAnswerOptionClick,\n  selectedAnswer,\n  setSelectedAnswer\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"answer\",\n          value: answer.text,\n          checked: selectedAnswer === answer.text,\n          onChange: () => setSelectedAnswer(answer.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), answer.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), isLastQuestion ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswerOptionClick(data.dimension, selectedAnswer === data.answers[0].text ? 'A' : 'B'),\n      disabled: !selectedAnswer,\n      children: \"Finish Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        var _data$answers$find;\n        const selectedOption = (_data$answers$find = data.answers.find(answer => answer.text === selectedAnswer)) === null || _data$answers$find === void 0 ? void 0 : _data$answers$find.option;\n        if (selectedOption) {\n          handleAnswerOptionClick(data.dimension, selectedOption);\n        }\n      },\n      disabled: !selectedAnswer,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Question","data","isLastQuestion","handleAnswerOptionClick","selectedAnswer","setSelectedAnswer","children","question","fileName","_jsxFileName","lineNumber","columnNumber","answers","map","answer","index","type","name","value","text","checked","onChange","onClick","dimension","disabled","_data$answers$find","selectedOption","find","option","_c","$RefreshReg$"],"sources":["/Users/pavel/Developer/compass_med/compass/compass_test/src/Question.js"],"sourcesContent":["import React from 'react';\nimport './css/QuestionStyles.css';\n\nfunction Question({ data, isLastQuestion, handleAnswerOptionClick, selectedAnswer, setSelectedAnswer }) {\n  return (\n    <div>\n      <h1>{data.question}</h1>\n      <div>\n        {data.answers.map((answer, index) => (\n          <label key={index}>\n            <input\n              type=\"radio\"\n              name=\"answer\"\n              value={answer.text}\n              checked={selectedAnswer === answer.text}\n              onChange={() => setSelectedAnswer(answer.text)}\n            />\n            {answer.text}\n          </label>\n        ))}\n      </div>\n      {isLastQuestion ? (\n        <button\n          onClick={() => handleAnswerOptionClick(data.dimension, selectedAnswer === data.answers[0].text ? 'A' : 'B')}\n          disabled={!selectedAnswer}\n        >\n          Finish Quiz\n        </button>\n      ) : (\n        <button\n          onClick={() => {\n            const selectedOption = data.answers.find(answer => answer.text === selectedAnswer)?.option;\n            if (selectedOption) {\n              handleAnswerOptionClick(data.dimension, selectedOption);\n            }\n          }}\n          disabled={!selectedAnswer}\n        >\n          Next\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default Question;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,cAAc;EAAEC,uBAAuB;EAAEC,cAAc;EAAEC;AAAkB,CAAC,EAAE;EACtG,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAKL,IAAI,CAACM;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBZ,OAAA;MAAAO,QAAA,EACGL,IAAI,CAACW,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC9BhB,OAAA;QAAAO,QAAA,gBACEP,OAAA;UACEiB,IAAI,EAAC,OAAO;UACZC,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEJ,MAAM,CAACK,IAAK;UACnBC,OAAO,EAAEhB,cAAc,KAAKU,MAAM,CAACK,IAAK;UACxCE,QAAQ,EAAEA,CAAA,KAAMhB,iBAAiB,CAACS,MAAM,CAACK,IAAI;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,EACDG,MAAM,CAACK,IAAI;MAAA,GARFJ,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLT,cAAc,gBACbH,OAAA;MACEuB,OAAO,EAAEA,CAAA,KAAMnB,uBAAuB,CAACF,IAAI,CAACsB,SAAS,EAAEnB,cAAc,KAAKH,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC,CAACO,IAAI,GAAG,GAAG,GAAG,GAAG,CAAE;MAC5GK,QAAQ,EAAE,CAACpB,cAAe;MAAAE,QAAA,EAC3B;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETZ,OAAA;MACEuB,OAAO,EAAEA,CAAA,KAAM;QAAA,IAAAG,kBAAA;QACb,MAAMC,cAAc,IAAAD,kBAAA,GAAGxB,IAAI,CAACW,OAAO,CAACe,IAAI,CAACb,MAAM,IAAIA,MAAM,CAACK,IAAI,KAAKf,cAAc,CAAC,cAAAqB,kBAAA,uBAA3DA,kBAAA,CAA6DG,MAAM;QAC1F,IAAIF,cAAc,EAAE;UAClBvB,uBAAuB,CAACF,IAAI,CAACsB,SAAS,EAAEG,cAAc,CAAC;QACzD;MACF,CAAE;MACFF,QAAQ,EAAE,CAACpB,cAAe;MAAAE,QAAA,EAC3B;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACkB,EAAA,GAxCQ7B,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}